from Crypto.Cipher import AES as aes
from base64 import b64decode
from argparse import ArgumentParser as aparse

def build_cypher(lines):
    _, iv = lines[0].split(':')
    iv_barr = bytearray.fromhex(iv.replace('\n', ''))
    _, aes_key = lines[1].split(':')
    aes_key = aes_key.replace('\n', '').encode('ISO-8859-1')

    cypher = aes.new(aes_key, aes.MODE_CBC, iv_barr)
    return cypher

def make_ctext(lines):
    ctext=''
    for i in range(2, len(lines)):
        _, key=lines[i].split(':')
        ctext+=str(b64decode(key.replace('\n', '').encode('ISO-8859-1')), 'ISO-8859-1')

    return ctext

if __name__ == '__main__':
    parser = aparse()
    parser.add_argument('-f', '--fname', required=True, dest='fname', metavar='', help='The path to keys files')
    args = parser.parse_args()

    lines = []
    with open(args.fname, 'r') as f:
        lines = f.readlines()

    cypher = build_cypher(lines)
    ctext = make_ctext(lines)

    print(cypher.decrypt(ctext.encode('ISO-8859-1')).decode('ISO-8859-1'))
